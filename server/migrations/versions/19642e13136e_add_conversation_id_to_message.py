# """Add conversation_id to Message

# Revision ID: 19642e13136e
# Revises: bf80ffcbda36
# Create Date: 2024-05-24 12:56:40.327261

# """
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = '19642e13136e'
# down_revision = 'bf80ffcbda36'
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('message', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('conversation_id', sa.Integer(), nullable=True))
#         batch_op.alter_column('content',
#                existing_type=sa.VARCHAR(),
#                type_=sa.Text(),
#                existing_nullable=True)
#         batch_op.create_foreign_key(None, 'conversation', ['conversation_id'], ['id'])

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('message', schema=None) as batch_op:
#         batch_op.drop_constraint(None, type_='foreignkey')
#         batch_op.alter_column('content',
#                existing_type=sa.Text(),
#                type_=sa.VARCHAR(),
#                existing_nullable=True)
#         batch_op.drop_column('conversation_id')

#     # ### end Alembic commands ###
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic
revision = '19642e13136e'
down_revision = 'bf80ffcbda36'
branch_labels = None
depends_on = None

def upgrade():
    # Check if conversation_id column exists in the message table
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = inspector.get_columns('message')
    column_names = [column['name'] for column in columns]
    
    if 'conversation_id' not in column_names:
        # Add conversation_id column if it doesn't exist
        with op.batch_alter_table('message', schema=None) as batch_op:
            batch_op.add_column(sa.Column('conversation_id', sa.Integer(), nullable=True))
            batch_op.alter_column('content',
                existing_type=sa.VARCHAR(),
                type_=sa.Text(),
                existing_nullable=True)
            batch_op.create_foreign_key(None, 'conversation', ['conversation_id'], ['id'])

def downgrade():
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('content',
            existing_type=sa.Text(),
            type_=sa.VARCHAR(),
            existing_nullable=True)
        batch_op.drop_column('conversation_id')
